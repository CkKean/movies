{"version":3,"file":"static/js/333.a268653f.chunk.js","mappings":"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","sources":["components/button.tsx","components/message.tsx","constants/imageConfiguration.ts","components/skeleton.tsx","utils/validationHelper.ts","components/table.tsx","components/movieDetailModal.tsx","components/pagination.tsx","components/searchBar.tsx","components/tabs.tsx","components/toTopButton.tsx","utils/customRequest.ts","services/movie.ts","services/search.ts","constants/movieStatusCategory.ts","pages/dashboard/index.tsx","utils/useDeviceType.tsx"],"sourcesContent":["import { FC } from \"react\";\r\n\r\ninterface props {\r\n  type?: \"primary\" | \"default\";\r\n  style?: any;\r\n  disabled?: boolean;\r\n  children: React.ReactNode | string;\r\n  onClick?: () => any;\r\n}\r\n\r\nconst Button: FC<props> = ({\r\n  onClick,\r\n  type = \"primary\",\r\n  children,\r\n  style,\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      style={style}\r\n      className={`btn-${type}`}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { FC, ReactNode, useEffect } from \"react\";\r\n\r\ninterface props {\r\n  title?: string | ReactNode;\r\n  type?: \"success\" | \"error\";\r\n  show: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Message: FC<props> = ({ title, type = \"alert\", show, onClose }) => {\r\n  useEffect(() => {\r\n    if (show) {\r\n      const timer = setTimeout(onClose, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [show, onClose]);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={`message ${type}`}>{title}</div>;\r\n};\r\n\r\nexport default Message;\r\n","export const IMAGE_PATH_ORIGINAL = \"https://image.tmdb.org/t/p/original\";\r\n","import { FC } from \"react\";\r\n\r\nconst Skeleton: FC = () => {\r\n  return (\r\n    <div className=\"skeleton-container\">\r\n      <div className=\"skeleton-line\"></div>\r\n      <div className=\"skeleton-line\"></div>\r\n      <div className=\"skeleton-line\"></div>\r\n      <div className=\"skeleton-line\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import _ from \"lodash\";\r\n\r\nexport const isNullOrUndefined = (value?: any) => {\r\n  return _.isNull(value) || _.isUndefined(value) || value === \"\";\r\n};\r\n\r\nexport const isValidNumber = (value: any): boolean => {\r\n  if (isNullOrUndefined(value)) {\r\n    return false;\r\n  }\r\n  if (Number.isNaN(parseInt(value))) {\r\n    return false;\r\n  }\r\n  if (isNaN(value)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n","import { FC, ReactNode } from \"react\";\r\nimport { isNullOrUndefined } from \"../utils/validationHelper\";\r\n\r\ninterface props {\r\n  items: {\r\n    title?: string;\r\n    value?: string | number | ReactNode;\r\n  }[];\r\n}\r\n\r\nconst Table: FC<props> = ({ items }) => {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {items.length > 0 &&\r\n          items.map((item) => (\r\n            <tr>\r\n              <td style={{ width: \"17%\", fontWeight: 700 }}>{item.title}</td>\r\n              <td>{!isNullOrUndefined(item.value) ? item.value : \"-\"}</td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { FC } from \"react\";\r\nimport { IMAGE_PATH_ORIGINAL } from \"../constants/imageConfiguration\";\r\nimport { MovieDetail } from \"../models/movieDetail\";\r\nimport Button from \"./button\";\r\nimport Skeleton from \"./skeleton\";\r\nimport Table from \"./table\";\r\n\r\ninterface props {\r\n  loading: boolean;\r\n  movieDetail?: MovieDetail | null;\r\n  show: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst MovieDetailModal: FC<props> = ({\r\n  loading,\r\n  movieDetail,\r\n  show,\r\n  onClose,\r\n}) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  const convertMinToReadableTime = (runtime: number) => {\r\n    if (runtime < 60) {\r\n      return runtime + \"mins\";\r\n    } else {\r\n      const hours = Math.floor(runtime / 60);\r\n      const mins = runtime % 60;\r\n      return hours + \" hour \" + mins + \" mins\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal modal-backdrop\">\r\n      <div\r\n        className={`modal-container modal-default ${\r\n          loading ? \"modal-loading\" : \"\"\r\n        }`}\r\n      >\r\n        {loading ? (\r\n          <>\r\n            <div className=\"modal-header\" style={{ marginBottom: \"1rem\" }}>\r\n              <div\r\n                className=\"close-icon close-icon-loading\"\r\n                onClick={onClose}\r\n              ></div>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <Skeleton />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          movieDetail !== null &&\r\n          movieDetail !== undefined && (\r\n            <>\r\n              <div\r\n                className=\"modal-header\"\r\n                style={{\r\n                  backgroundImage: `url(${IMAGE_PATH_ORIGINAL}${movieDetail.backdrop_path})`,\r\n                }}\r\n              >\r\n                <div className=\"close-icon\" onClick={onClose}></div>\r\n              </div>\r\n\r\n              <div className=\"modal-content\">\r\n                <div\r\n                  className=\"text-center \"\r\n                  style={{\r\n                    fontSize: \"2rem\",\r\n                  }}\r\n                >\r\n                  <b>{movieDetail.title}</b>\r\n                </div>\r\n\r\n                <Table\r\n                  items={[\r\n                    { title: \"Overview\", value: movieDetail?.overview },\r\n                    { title: \"Tagline\", value: movieDetail?.tagline || \"-\" },\r\n                    {\r\n                      title: \"Duration\",\r\n                      value: convertMinToReadableTime(movieDetail?.runtime),\r\n                    },\r\n                    {\r\n                      title: \"Movie Type\",\r\n                      value: movieDetail?.genres[0].name,\r\n                    },\r\n                    {\r\n                      title: \"Original Language\",\r\n                      value: movieDetail?.original_language,\r\n                    },\r\n                    {\r\n                      title: \"Spoken Language\",\r\n                      value: movieDetail?.spoken_languages[0].english_name,\r\n                    },\r\n                    { title: \"Status\", value: movieDetail?.status },\r\n                    { title: \"Release Date\", value: movieDetail?.release_date },\r\n                    {\r\n                      title: \"Above 18\",\r\n                      value: movieDetail?.adult ? (\r\n                        <span className=\"success-color\">✔</span>\r\n                      ) : (\r\n                        <span className=\"danger-color\">✗</span>\r\n                      ),\r\n                    },\r\n                    { title: \"Popularity\", value: movieDetail?.popularity },\r\n                    { title: \"Vote Average\", value: movieDetail?.vote_average },\r\n                    { title: \"Vote Count\", value: movieDetail?.vote_count },\r\n                    {\r\n                      title: \"Website \",\r\n                      value: movieDetail?.homepage ? (\r\n                        <a\r\n                          href={movieDetail?.homepage}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          {movieDetail?.homepage}\r\n                        </a>\r\n                      ) : (\r\n                        \"-\"\r\n                      ),\r\n                    },\r\n                  ]}\r\n                />\r\n                <div className=\"modal-button\">\r\n                  <Button onClick={onClose}>Close</Button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailModal;\r\n","import { FC } from \"react\";\r\nimport Button from \"./button\";\r\n\r\ninterface props {\r\n  currentPage: number;\r\n  itemsPerPage?: number;\r\n  totalPages: number;\r\n  totalResults: number;\r\n  setCurrentPage: (pageNumber: number) => void;\r\n  handlePageChange: (pageNumber: number) => void;\r\n}\r\n\r\nconst Pagination: FC<props> = ({\r\n  currentPage,\r\n  itemsPerPage = 20,\r\n  totalPages = 0,\r\n  totalResults = 0,\r\n  handlePageChange,\r\n  setCurrentPage,\r\n}) => {\r\n  const handleNextPage = () => {\r\n    const targetPage = currentPage + 1;\r\n    setCurrentPage(targetPage);\r\n    handlePageChange(targetPage);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    const targetPage = currentPage - 1;\r\n    setCurrentPage(targetPage);\r\n    handlePageChange(targetPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <div className=\"fw400\">\r\n        <strong>\r\n          {currentPage === 1 ? 1 : itemsPerPage * (currentPage - 1) + 1} -{\" \"}\r\n          {itemsPerPage * currentPage}\r\n        </strong>{\" \"}\r\n        of <strong>{totalResults}</strong> items\r\n      </div>\r\n\r\n      <div className=\"text-right\">\r\n        <span className=\"fw400\" style={{ marginRight: \"5px\" }}>\r\n          Page <strong>{currentPage}</strong> of <strong>{totalPages}</strong>\r\n        </span>\r\n        <Button\r\n          style={{ marginRight: \"5px\" }}\r\n          onClick={handlePreviousPage}\r\n          disabled={currentPage === 1}\r\n        >\r\n          {\"<\"}\r\n        </Button>\r\n        <Button onClick={handleNextPage} disabled={currentPage === totalPages}>\r\n          {\">\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { FC } from \"react\";\r\nimport Button from \"./button\";\r\n\r\ninterface props {\r\n  searchTitle: string;\r\n  disabled?: boolean;\r\n  setSearchTitle: (title: string) => void;\r\n  onSearch: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst SearchBar: FC<props> = ({\r\n  searchTitle,\r\n  setSearchTitle,\r\n  onSearch,\r\n  onReset,\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <div style={{ margin: \"1rem 0\" }}>\r\n      <input\r\n        placeholder=\"Search by Movie Title\"\r\n        style={{ display: \"inline-block\", width: \"50%\" }}\r\n        onChange={(event) => setSearchTitle(event.target.value)}\r\n        value={searchTitle}\r\n      />\r\n      <Button\r\n        disabled={disabled}\r\n        style={{ margin: \"0px 5px\" }}\r\n        type=\"primary\"\r\n        onClick={() => onSearch()}\r\n      >\r\n        Search\r\n      </Button>\r\n      <Button disabled={disabled} type=\"default\" onClick={onReset}>\r\n        Reset\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { FC } from \"react\";\r\n\r\ninterface props {\r\n  items: {\r\n    title: string;\r\n    active: boolean;\r\n    onClick?: () => any;\r\n  }[];\r\n}\r\n\r\nconst Tabs: FC<props> = ({ items }) => {\r\n  return (\r\n    <div className=\"tab-bar\">\r\n      {items.map((item) => (\r\n        <div\r\n          key={item.title}\r\n          className={`tab-item ${item.active ? \"active\" : \"\"}`}\r\n          onClick={item.onClick}\r\n        >\r\n          {item.title}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","// ToTopButton.tsx\r\nimport { FC, useEffect, useState } from \"react\";\r\n\r\nconst ToTopButton: FC = () => {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  const handleScroll = () => {\r\n    const top = document.documentElement.scrollTop || document.body.scrollTop;\r\n    setShowButton(top > 300);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`to-top-button ${showButton ? \"show\" : \"\"}`}\r\n      onClick={scrollToTop}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"22\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M12 19V5M5 12l7-7 7 7\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToTopButton;\r\n","import axios, { AxiosInstance, AxiosResponse } from \"axios\";\r\n\r\nconst axiosInstance: AxiosInstance = axios.create({\r\n  headers: {\r\n    Authorization:\r\n      \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MTZhMDQ3NzI0Y2EzMGE0NDIxMzM0NWFiNzZhZTNiNiIsInN1YiI6IjY0Y2I2NDJhMjk3MzM4MDIwZTU3NmYxMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A3_ZXNI9VVxP1BfagaoDM1bAcinbUWtZpGG7irO4N2c\",\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const get = async <T>(url: string): Promise<T> => {\r\n  try {\r\n    const response: AxiosResponse<T> = await axiosInstance.get(url);\r\n\r\n    if (response.status === 200) {\r\n      return response.data;\r\n    } else {\r\n      throw new Error(\"Request failed.\");\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import { get } from \"../utils/customRequest\";\r\n\r\nconst baseUrl = \"https://api.themoviedb.org/3/movie\";\r\n\r\nconst getNowPlaying = async <T>({\r\n  pageNumber = 1,\r\n}: {\r\n  pageNumber: number;\r\n}): Promise<T> => {\r\n  return get(`${baseUrl}/now_playing?page=${pageNumber}&sort_by=release_date.desc`);\r\n};\r\n\r\nconst getTopRated = async <T>({\r\n  pageNumber = 1,\r\n}: {\r\n  pageNumber: number;\r\n}): Promise<T> => {\r\n  return get(`${baseUrl}/top_rated?page=${pageNumber}`);\r\n};\r\n\r\nconst getDetails = async <T>(movieID: number): Promise<T> => {\r\n  return get(`${baseUrl}/${movieID}`);\r\n};\r\n\r\nconst MovieService = {\r\n  getNowPlaying,\r\n  getTopRated,\r\n  getDetails,\r\n};\r\n\r\nexport default MovieService;","import { Response } from \"../models/response\";\r\nimport { get } from \"../utils/customRequest\";\r\n\r\nconst baseUrl = \"https://api.themoviedb.org/3/search\";\r\n\r\nconst searchMovie = async <T>(\r\n  title: string,\r\n  pageNumber: number\r\n): Promise<Response<T>> => {\r\n  return get(`${baseUrl}/movie?query=${title}&page=${pageNumber}`);\r\n};\r\n\r\nconst SearchService = { searchMovie };\r\n\r\nexport default SearchService;\r\n","export const MOVIE_STATUS = {\r\n  NOW_SHOWING: \"NOW_SHOWING\",\r\n  TOP_RATED: \"TOP_RATED\",\r\n};\r\n","import { FC, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport Button from \"../../components/button\";\r\nimport Message from \"../../components/message\";\r\nimport MovieDetailModal from \"../../components/movieDetailModal\";\r\nimport Pagination from \"../../components/pagination\";\r\nimport SearchBar from \"../../components/searchBar\";\r\nimport Skeleton from \"../../components/skeleton\";\r\nimport Tabs from \"../../components/tabs\";\r\nimport ToTopButton from \"../../components/toTopButton\";\r\nimport { IMAGE_PATH_ORIGINAL } from \"../../constants/imageConfiguration\";\r\nimport { Movie } from \"../../models/movie\";\r\nimport { MovieDetail } from \"../../models/movieDetail\";\r\nimport { Response } from \"../../models/response\";\r\nimport MovieService from \"../../services/movie\";\r\nimport SearchService from \"../../services/search\";\r\nimport { useDeviceType } from \"../../utils/useDeviceType\";\r\nimport { isNullOrUndefined } from \"../../utils/validationHelper\";\r\nimport { MOVIE_STATUS } from \"../../constants/movieStatusCategory\";\r\n\r\nconst Dashbaord: FC = () => {\r\n  const itemsPerPage = 20;\r\n  let movieTitleSearch = useRef<string>(\"\");\r\n  const { isMobile } = useDeviceType();\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [searchTitle, setSearchTitle] = useState<string>(\"\");\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [totalPages, setTotalPages] = useState<number>(0);\r\n  const [totalResults, setTotalResults] = useState<number>(0);\r\n  const [category, setCategory] = useState<string>(MOVIE_STATUS.NOW_SHOWING);\r\n  const [isSearch, setIsSearch] = useState<boolean>(false);\r\n\r\n  const [detailLoading, setDetailLoading] = useState<boolean>(false);\r\n  const [showDetail, setShowDetail] = useState<boolean>(false);\r\n  const [movieDetail, setMovieDetail] = useState<MovieDetail | null>(null);\r\n  const [showError, setShowError] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const fetchMovieData = useCallback(\r\n    async ({\r\n      selectedCategory = category,\r\n      pageNumber = 1,\r\n    }: {\r\n      selectedCategory?: string;\r\n      pageNumber?: number;\r\n    }) => {\r\n      setLoading(true);\r\n      setIsSearch(false);\r\n      setCategory(selectedCategory);\r\n      setCurrentPage(pageNumber);\r\n      try {\r\n        let data: Response<Movie[]> | null = null;\r\n        if (selectedCategory === MOVIE_STATUS.NOW_SHOWING) {\r\n          data = await MovieService.getNowPlaying({ pageNumber: pageNumber });\r\n        } else {\r\n          data = await MovieService.getTopRated({ pageNumber: pageNumber });\r\n        }\r\n\r\n        if (data && data.results) {\r\n          setMovies(data.results);\r\n          setTotalPages(data.total_pages);\r\n          setTotalResults(data.total_results);\r\n        }\r\n      } catch (error) {\r\n        setError(\"Network issue. Please reload the page and try again.\");\r\n        setMovies([]);\r\n        setTotalPages(0);\r\n        setTotalResults(0);\r\n        setShowError(true);\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    },\r\n    [category]\r\n  );\r\n\r\n  const searchMovieData = useCallback(\r\n    async (pageNumber = 1, isPageChanged = false) => {\r\n      try {\r\n        setLoading(true);\r\n        setIsSearch(true);\r\n        setCurrentPage(pageNumber);\r\n\r\n        if (!isNullOrUndefined(searchTitle)) {\r\n          movieTitleSearch.current = searchTitle;\r\n        }\r\n\r\n        if (isNullOrUndefined(searchTitle) && !isPageChanged) {\r\n          fetchMovieData({});\r\n        } else {\r\n          const data: Response<Movie[]> = await SearchService.searchMovie(\r\n            movieTitleSearch.current,\r\n            pageNumber\r\n          );\r\n\r\n          if (data && data.results) {\r\n            setMovies(data.results);\r\n            setTotalPages(data.total_pages);\r\n            setTotalResults(data.total_results);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        setError(\"Network issue. Please reload the page and try again.\");\r\n        setShowError(true);\r\n        setMovies([]);\r\n        setTotalPages(0);\r\n        setTotalResults(0);\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    },\r\n    [fetchMovieData, searchTitle]\r\n  );\r\n\r\n  const handlePageChange = useCallback(\r\n    (pageNumber: number) => {\r\n      if (isSearch) {\r\n        searchMovieData(pageNumber, currentPage !== pageNumber);\r\n      } else {\r\n        fetchMovieData({ pageNumber });\r\n      }\r\n    },\r\n    [currentPage, fetchMovieData, isSearch, searchMovieData]\r\n  );\r\n\r\n  const handleReset = useCallback(() => {\r\n    setSearchTitle(\"\");\r\n    movieTitleSearch.current = \"\";\r\n    fetchMovieData({\r\n      selectedCategory: MOVIE_STATUS.NOW_SHOWING,\r\n      pageNumber: 1,\r\n    });\r\n  }, [fetchMovieData]);\r\n\r\n  const handleOnSelectMovie = async (movieID: number) => {\r\n    setDetailLoading(true);\r\n    try {\r\n      setShowDetail(true);\r\n      const data: MovieDetail = await MovieService.getDetails(movieID);\r\n\r\n      if (data) {\r\n        setMovieDetail(data);\r\n      } else {\r\n        setShowDetail(false);\r\n        setShowError(true);\r\n        setError(\"Retrieve movie detail failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      setShowDetail(false);\r\n      setShowError(true);\r\n      setError(\"Network issue. Please reload the page and try again.\");\r\n    }\r\n    setDetailLoading(false);\r\n  };\r\n\r\n  const tabsComponent = useMemo(\r\n    () => (\r\n      <Tabs\r\n        items={[\r\n          {\r\n            active: category === MOVIE_STATUS.NOW_SHOWING,\r\n            title: \"Now Showing\",\r\n            onClick() {\r\n              fetchMovieData({\r\n                selectedCategory: MOVIE_STATUS.NOW_SHOWING,\r\n                pageNumber: 1,\r\n              });\r\n            },\r\n          },\r\n          {\r\n            active: category === MOVIE_STATUS.TOP_RATED,\r\n            title: \"Top Rated\",\r\n            onClick() {\r\n              fetchMovieData({\r\n                selectedCategory: MOVIE_STATUS.TOP_RATED,\r\n                pageNumber: 1,\r\n              });\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    ),\r\n    [category, fetchMovieData]\r\n  );\r\n\r\n  const searchBar = useMemo(\r\n    () => (\r\n      <div style={{ textAlign: \"center\", padding: \"10px\" }}>\r\n        <SearchBar\r\n          disabled={loading}\r\n          onReset={handleReset}\r\n          onSearch={searchMovieData}\r\n          searchTitle={searchTitle}\r\n          setSearchTitle={setSearchTitle}\r\n        />\r\n      </div>\r\n    ),\r\n    [handleReset, loading, searchMovieData, searchTitle]\r\n  );\r\n\r\n  const pagination = useMemo(\r\n    () => (\r\n      <Pagination\r\n        itemsPerPage={itemsPerPage}\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        totalResults={totalResults}\r\n        setCurrentPage={setCurrentPage}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n    ),\r\n    [currentPage, handlePageChange, itemsPerPage, totalPages, totalResults]\r\n  );\r\n\r\n  const movieList = useMemo(\r\n    () =>\r\n      movies.map((movie) => (\r\n        <div\r\n          key={movie.id}\r\n          className=\"card\"\r\n          onClick={() => {\r\n            handleOnSelectMovie(movie.id);\r\n          }}\r\n        >\r\n          <div className=\"hover-text\">\r\n            <Button type={\"default\"}>Movie Info</Button>\r\n          </div>\r\n\r\n          <div className=\"left-column\">\r\n            <div\r\n              className=\"image-container\"\r\n              style={{ width: isMobile ? \"100%\" : \"150px\" }}\r\n            >\r\n              <img\r\n                src={`${IMAGE_PATH_ORIGINAL}${movie.poster_path}`}\r\n                alt={movie.title}\r\n                loading=\"lazy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-column\">\r\n            <div className=\"card-title\">{movie.title}</div>\r\n            <div className=\"card-description\">{movie.overview}</div>\r\n            <div className=\"card-extra-information\">\r\n              <p>Language: {movie.original_language}</p>\r\n              <p>Release Date: {movie.release_date}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )),\r\n    [isMobile, movies]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchMovieData({});\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1 className=\"title\">Movies</h1>\r\n      </div>\r\n      {tabsComponent}\r\n      {searchBar}\r\n\r\n      <div style={{ padding: \"10px\", margin: \"10px 10%\" }}>\r\n        {loading ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <>\r\n            {movies && movies.length > 0 ? (\r\n              <>\r\n                {pagination}\r\n                {movieList}\r\n                {pagination}\r\n              </>\r\n            ) : (\r\n              <div className=\"no-data-shown\">\r\n                No Movie Shown\r\n                {movieTitleSearch.current !== \"\" &&\r\n                  ` with \"${movieTitleSearch.current}\"`}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <MovieDetailModal\r\n        loading={detailLoading}\r\n        movieDetail={movieDetail}\r\n        show={showDetail}\r\n        onClose={() => setShowDetail(false)}\r\n      />\r\n\r\n      <Message\r\n        type=\"error\"\r\n        title={error}\r\n        onClose={() => {\r\n          setShowError(false);\r\n          setError(\"\");\r\n        }}\r\n        show={showError}\r\n      />\r\n      <ToTopButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashbaord;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useDeviceType = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const isMobile = width <= 767;\r\n  const isWeb = width >= 768;\r\n\r\n  return { isMobile, isWeb };\r\n};\r\n"],"names":["_ref","onClick","_ref$type","type","children","style","_ref$disabled","disabled","_jsx","className","concat","title","show","onClose","useEffect","timer","setTimeout","clearTimeout","IMAGE_PATH_ORIGINAL","_jsxs","isNullOrUndefined","value","_","items","length","map","item","width","fontWeight","loading","movieDetail","runtime","_Fragment","marginBottom","Skeleton","undefined","backgroundImage","backdrop_path","fontSize","Table","overview","tagline","Math","floor","genres","name","original_language","spoken_languages","english_name","status","release_date","adult","popularity","vote_average","vote_count","homepage","href","target","rel","Button","currentPage","_ref$itemsPerPage","itemsPerPage","_ref$totalPages","totalPages","_ref$totalResults","totalResults","handlePageChange","setCurrentPage","marginRight","targetPage","searchTitle","setSearchTitle","onSearch","onReset","margin","placeholder","display","onChange","event","active","_useState","useState","_useState2","_slicedToArray","showButton","setShowButton","handleScroll","top","document","documentElement","scrollTop","body","window","addEventListener","removeEventListener","scrollTo","behavior","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","axiosInstance","axios","create","headers","Authorization","Accept","get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","wrap","_context","prev","next","sent","abrupt","data","Error","t0","stop","_x","apply","arguments","baseUrl","getNowPlaying","_ref2","_ref$pageNumber","pageNumber","getTopRated","_ref4","_callee2","_ref3","_ref3$pageNumber","_context2","_x2","getDetails","_ref5","_callee3","movieID","_context3","_x3","searchMovie","MOVIE_STATUS","movieTitleSearch","useRef","_useDeviceType","innerWidth","setWidth","handleResize","isMobile","isWeb","useDeviceType","movies","setMovies","_useState3","_useState4","setLoading","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setTotalPages","_useState11","_useState12","setTotalResults","_useState13","_useState14","category","setCategory","_useState15","_useState16","isSearch","setIsSearch","_useState17","_useState18","detailLoading","setDetailLoading","_useState19","_useState20","showDetail","setShowDetail","_useState21","_useState22","setMovieDetail","_useState23","_useState24","showError","setShowError","_useState25","_useState26","error","setError","fetchMovieData","useCallback","_ref$selectedCategory","selectedCategory","MovieService","results","total_pages","total_results","console","log","searchMovieData","isPageChanged","_args2","current","SearchService","handleReset","handleOnSelectMovie","tabsComponent","useMemo","Tabs","searchBar","textAlign","padding","SearchBar","pagination","Pagination","movieList","movie","id","src","poster_path","alt","MovieDetailModal","Message","ToTopButton"],"sourceRoot":""}